{"version":3,"sources":["./node_modules/@ionic-native/diagnostic/__ivy_ngcc__/ngx/index.js","./node_modules/@ionic-native/location-accuracy/__ivy_ngcc__/ngx/index.js"],"names":[],"mappings":"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","file":"default~add-address-add-address-module~tabs-tabs-module-es2015.js","sourcesContent":["import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova, cordovaPropertyGet, cordovaPropertySet } from '@ionic-native/core';\nimport * as Éµngcc0 from '@angular/core';\nvar Diagnostic = /** @class */ (function (_super) {\n    __extends(Diagnostic, _super);\n    function Diagnostic() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.permission = {\n            READ_CALENDAR: 'READ_CALENDAR',\n            WRITE_CALENDAR: 'WRITE_CALENDAR',\n            CAMERA: 'CAMERA',\n            READ_CONTACTS: 'READ_CONTACTS',\n            WRITE_CONTACTS: 'WRITE_CONTACTS',\n            GET_ACCOUNTS: 'GET_ACCOUNTS',\n            ACCESS_FINE_LOCATION: 'ACCESS_FINE_LOCATION',\n            ACCESS_COARSE_LOCATION: 'ACCESS_COARSE_LOCATION',\n            RECORD_AUDIO: 'RECORD_AUDIO',\n            READ_PHONE_STATE: 'READ_PHONE_STATE',\n            CALL_PHONE: 'CALL_PHONE',\n            ADD_VOICEMAIL: 'ADD_VOICEMAIL',\n            USE_SIP: 'USE_SIP',\n            PROCESS_OUTGOING_CALLS: 'PROCESS_OUTGOING_CALLS',\n            READ_CALL_LOG: 'READ_CALL_LOG',\n            WRITE_CALL_LOG: 'WRITE_CALL_LOG',\n            SEND_SMS: 'SEND_SMS',\n            RECEIVE_SMS: 'RECEIVE_SMS',\n            READ_SMS: 'READ_SMS',\n            RECEIVE_WAP_PUSH: 'RECEIVE_WAP_PUSH',\n            RECEIVE_MMS: 'RECEIVE_MMS',\n            WRITE_EXTERNAL_STORAGE: 'WRITE_EXTERNAL_STORAGE',\n            READ_EXTERNAL_STORAGE: 'READ_EXTERNAL_STORAGE',\n            BODY_SENSORS: 'BODY_SENSORS',\n        };\n        _this.locationAuthorizationMode = {\n            ALWAYS: 'always',\n            WHEN_IN_USE: 'when_in_use',\n        };\n        _this.permissionGroups = {\n            CALENDAR: ['READ_CALENDAR', 'WRITE_CALENDAR'],\n            CAMERA: ['CAMERA'],\n            CONTACTS: ['READ_CONTACTS', 'WRITE_CONTACTS', 'GET_ACCOUNTS'],\n            LOCATION: ['ACCESS_FINE_LOCATION', 'ACCESS_COARSE_LOCATION'],\n            MICROPHONE: ['RECORD_AUDIO'],\n            PHONE: [\n                'READ_PHONE_STATE',\n                'CALL_PHONE',\n                'ADD_VOICEMAIL',\n                'USE_SIP',\n                'PROCESS_OUTGOING_CALLS',\n                'READ_CALL_LOG',\n                'WRITE_CALL_LOG',\n            ],\n            SENSORS: ['BODY_SENSORS'],\n            SMS: ['SEND_SMS', 'RECEIVE_SMS', 'READ_SMS', 'RECEIVE_WAP_PUSH', 'RECEIVE_MMS'],\n            STORAGE: ['READ_EXTERNAL_STORAGE', 'WRITE_EXTERNAL_STORAGE'],\n        };\n        _this.locationMode = {\n            HIGH_ACCURACY: 'high_accuracy',\n            DEVICE_ONLY: 'device_only',\n            BATTERY_SAVING: 'battery_saving',\n            LOCATION_OFF: 'location_off',\n        };\n        _this.bluetoothState = {\n            UNKNOWN: 'unknown',\n            RESETTING: 'resetting',\n            UNSUPPORTED: 'unsupported',\n            UNAUTHORIZED: 'unauthorized',\n            POWERED_OFF: 'powered_off',\n            POWERED_ON: 'powered_on',\n            POWERING_OFF: 'powering_off',\n            POWERING_ON: 'powering_on',\n        };\n        return _this;\n    }\n    Diagnostic.prototype.isLocationAvailable = function () { return cordova(this, \"isLocationAvailable\", {}, arguments); };\n    Diagnostic.prototype.isWifiAvailable = function () { return cordova(this, \"isWifiAvailable\", {}, arguments); };\n    Diagnostic.prototype.isCameraAvailable = function (externalStorage) { return cordova(this, \"isCameraAvailable\", { \"callbackOrder\": \"reverse\" }, arguments); };\n    Diagnostic.prototype.isBluetoothAvailable = function () { return cordova(this, \"isBluetoothAvailable\", {}, arguments); };\n    Diagnostic.prototype.switchToLocationSettings = function () { return cordova(this, \"switchToLocationSettings\", { \"sync\": true, \"platforms\": [\"Android\", \"Windows 10\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.switchToMobileDataSettings = function () { return cordova(this, \"switchToMobileDataSettings\", { \"sync\": true, \"platforms\": [\"Android\", \"Windows 10\"] }, arguments); };\n    Diagnostic.prototype.switchToBluetoothSettings = function () { return cordova(this, \"switchToBluetoothSettings\", { \"sync\": true, \"platforms\": [\"Android\", \"Windows 10\"] }, arguments); };\n    Diagnostic.prototype.switchToWifiSettings = function () { return cordova(this, \"switchToWifiSettings\", { \"sync\": true, \"platforms\": [\"Android\", \"Windows 10\"] }, arguments); };\n    Diagnostic.prototype.isWifiEnabled = function () { return cordova(this, \"isWifiEnabled\", { \"platforms\": [\"Android\", \"Windows 10\"] }, arguments); };\n    Diagnostic.prototype.setWifiState = function (state) { return cordova(this, \"setWifiState\", { \"callbackOrder\": \"reverse\", \"platforms\": [\"Android\", \"Windows 10\"] }, arguments); };\n    Diagnostic.prototype.setBluetoothState = function (state) { return cordova(this, \"setBluetoothState\", { \"callbackOrder\": \"reverse\", \"platforms\": [\"Android\", \"Windows 10\"] }, arguments); };\n    Diagnostic.prototype.isLocationEnabled = function () { return cordova(this, \"isLocationEnabled\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.isLocationAuthorized = function () { return cordova(this, \"isLocationAuthorized\", {}, arguments); };\n    Diagnostic.prototype.getLocationAuthorizationStatus = function () { return cordova(this, \"getLocationAuthorizationStatus\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.requestLocationAuthorization = function (mode) { return cordova(this, \"requestLocationAuthorization\", { \"platforms\": [\"Android\", \"iOS\"], \"callbackOrder\": \"reverse\" }, arguments); };\n    Diagnostic.prototype.isCameraPresent = function () { return cordova(this, \"isCameraPresent\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.isCameraAuthorized = function (externalStorage) { return cordova(this, \"isCameraAuthorized\", { \"platforms\": [\"Android\", \"iOS\"], \"callbackOrder\": \"reverse\" }, arguments); };\n    Diagnostic.prototype.getCameraAuthorizationStatus = function (externalStorage) { return cordova(this, \"getCameraAuthorizationStatus\", { \"platforms\": [\"Android\", \"iOS\"], \"callbackOrder\": \"reverse\" }, arguments); };\n    Diagnostic.prototype.requestCameraAuthorization = function (externalStorage) { return cordova(this, \"requestCameraAuthorization\", { \"platforms\": [\"Android\", \"iOS\"], \"callbackOrder\": \"reverse\" }, arguments); };\n    Diagnostic.prototype.isMicrophoneAuthorized = function () { return cordova(this, \"isMicrophoneAuthorized\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.getMicrophoneAuthorizationStatus = function () { return cordova(this, \"getMicrophoneAuthorizationStatus\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.requestMicrophoneAuthorization = function () { return cordova(this, \"requestMicrophoneAuthorization\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.isContactsAuthorized = function () { return cordova(this, \"isContactsAuthorized\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.getContactsAuthorizationStatus = function () { return cordova(this, \"getContactsAuthorizationStatus\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.requestContactsAuthorization = function () { return cordova(this, \"requestContactsAuthorization\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.isCalendarAuthorized = function () { return cordova(this, \"isCalendarAuthorized\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.getCalendarAuthorizationStatus = function () { return cordova(this, \"getCalendarAuthorizationStatus\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.requestCalendarAuthorization = function () { return cordova(this, \"requestCalendarAuthorization\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.switchToSettings = function () { return cordova(this, \"switchToSettings\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.getBluetoothState = function () { return cordova(this, \"getBluetoothState\", { \"platforms\": [\"Android\", \"iOS\"] }, arguments); };\n    Diagnostic.prototype.registerBluetoothStateChangeHandler = function (handler) { return cordova(this, \"registerBluetoothStateChangeHandler\", { \"platforms\": [\"Android\", \"iOS\"], \"sync\": true }, arguments); };\n    Diagnostic.prototype.registerLocationStateChangeHandler = function (handler) { return cordova(this, \"registerLocationStateChangeHandler\", { \"platforms\": [\"Android\", \"iOS\"], \"sync\": true }, arguments); };\n    Diagnostic.prototype.isGpsLocationAvailable = function () { return cordova(this, \"isGpsLocationAvailable\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.isGpsLocationEnabled = function () { return cordova(this, \"isGpsLocationEnabled\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.isNetworkLocationAvailable = function () { return cordova(this, \"isNetworkLocationAvailable\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.isNetworkLocationEnabled = function () { return cordova(this, \"isNetworkLocationEnabled\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.getLocationMode = function () { return cordova(this, \"getLocationMode\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.getPermissionAuthorizationStatus = function (permission) { return cordova(this, \"getPermissionAuthorizationStatus\", { \"platforms\": [\"Android\"], \"callbackOrder\": \"reverse\" }, arguments); };\n    Diagnostic.prototype.getPermissionsAuthorizationStatus = function (permissions) { return cordova(this, \"getPermissionsAuthorizationStatus\", { \"platforms\": [\"Android\"], \"callbackOrder\": \"reverse\" }, arguments); };\n    Diagnostic.prototype.requestRuntimePermission = function (permission) { return cordova(this, \"requestRuntimePermission\", { \"platforms\": [\"Android\"], \"callbackOrder\": \"reverse\" }, arguments); };\n    Diagnostic.prototype.requestRuntimePermissions = function (permissions) { return cordova(this, \"requestRuntimePermissions\", { \"platforms\": [\"Android\"], \"callbackOrder\": \"reverse\" }, arguments); };\n    Diagnostic.prototype.isRequestingPermission = function () { return cordova(this, \"isRequestingPermission\", { \"sync\": true }, arguments); };\n    Diagnostic.prototype.registerPermissionRequestCompleteHandler = function (handler) { return cordova(this, \"registerPermissionRequestCompleteHandler\", { \"sync\": true }, arguments); };\n    Diagnostic.prototype.isBluetoothEnabled = function () { return cordova(this, \"isBluetoothEnabled\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.hasBluetoothSupport = function () { return cordova(this, \"hasBluetoothSupport\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.hasBluetoothLESupport = function () { return cordova(this, \"hasBluetoothLESupport\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.hasBluetoothLEPeripheralSupport = function () { return cordova(this, \"hasBluetoothLEPeripheralSupport\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.isExternalStorageAuthorized = function () { return cordova(this, \"isExternalStorageAuthorized\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.getExternalStorageAuthorizationStatus = function () { return cordova(this, \"getExternalStorageAuthorizationStatus\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.requestExternalStorageAuthorization = function () { return cordova(this, \"requestExternalStorageAuthorization\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.getExternalSdCardDetails = function () { return cordova(this, \"getExternalSdCardDetails\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.switchToWirelessSettings = function () { return cordova(this, \"switchToWirelessSettings\", { \"platforms\": [\"Android\"], \"sync\": true }, arguments); };\n    Diagnostic.prototype.switchToNFCSettings = function () { return cordova(this, \"switchToNFCSettings\", { \"platforms\": [\"Android\"], \"sync\": true }, arguments); };\n    Diagnostic.prototype.isNFCPresent = function () { return cordova(this, \"isNFCPresent\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.isNFCEnabled = function () { return cordova(this, \"isNFCEnabled\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.isNFCAvailable = function () { return cordova(this, \"isNFCAvailable\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.registerNFCStateChangeHandler = function (handler) { return cordova(this, \"registerNFCStateChangeHandler\", { \"platforms\": [\"Android\"], \"sync\": true }, arguments); };\n    Diagnostic.prototype.isDataRoamingEnabled = function () { return cordova(this, \"isDataRoamingEnabled\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.isADBModeEnabled = function () { return cordova(this, \"isADBModeEnabled\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.isDeviceRooted = function () { return cordova(this, \"isDeviceRooted\", { \"platforms\": [\"Android\"] }, arguments); };\n    Diagnostic.prototype.isCameraRollAuthorized = function () { return cordova(this, \"isCameraRollAuthorized\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.getCameraRollAuthorizationStatus = function () { return cordova(this, \"getCameraRollAuthorizationStatus\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.requestCameraRollAuthorization = function () { return cordova(this, \"requestCameraRollAuthorization\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.isRemoteNotificationsEnabled = function () { return cordova(this, \"isRemoteNotificationsEnabled\", { \"platforms\": [\"iOS\", \"Android\"] }, arguments); };\n    Diagnostic.prototype.isRegisteredForRemoteNotifications = function () { return cordova(this, \"isRegisteredForRemoteNotifications\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.getRemoteNotificationsAuthorizationStatus = function () { return cordova(this, \"getRemoteNotificationsAuthorizationStatus\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.requestRemoteNotificationsAuthorization = function (types, omitRegistration) { return cordova(this, \"requestRemoteNotificationsAuthorization\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.getRemoteNotificationTypes = function () { return cordova(this, \"getRemoteNotificationTypes\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.isRemindersAuthorized = function () { return cordova(this, \"isRemindersAuthorized\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.getRemindersAuthorizationStatus = function () { return cordova(this, \"getRemindersAuthorizationStatus\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.requestRemindersAuthorization = function () { return cordova(this, \"requestRemindersAuthorization\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.isBackgroundRefreshAuthorized = function () { return cordova(this, \"isBackgroundRefreshAuthorized\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.getBackgroundRefreshStatus = function () { return cordova(this, \"getBackgroundRefreshStatus\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.requestBluetoothAuthorization = function () { return cordova(this, \"requestBluetoothAuthorization\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.isMotionAvailable = function () { return cordova(this, \"isMotionAvailable\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.isMotionRequestOutcomeAvailable = function () { return cordova(this, \"isMotionRequestOutcomeAvailable\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.requestMotionAuthorization = function () { return cordova(this, \"requestMotionAuthorization\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.getMotionAuthorizationStatus = function () { return cordova(this, \"getMotionAuthorizationStatus\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.getLocationAccuracyAuthorization = function () { return cordova(this, \"getLocationAccuracyAuthorization\", { \"platform\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.requestTemporaryFullAccuracyAuthorization = function (purpose) { return cordova(this, \"requestTemporaryFullAccuracyAuthorization\", { \"platforms\": [\"iOS\"] }, arguments); };\n    Diagnostic.prototype.registerLocationAccuracyAuthorizationChangeHandler = function (handler) { return cordova(this, \"registerLocationAccuracyAuthorizationChangeHandler\", { \"platforms\": [\"iOS\"], \"sync\": true }, arguments); };\n    Object.defineProperty(Diagnostic.prototype, \"permissionStatus\", {\n        get: function () { return cordovaPropertyGet(this, \"permissionStatus\"); },\n        set: function (value) { cordovaPropertySet(this, \"permissionStatus\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Diagnostic.prototype, \"NFCState\", {\n        get: function () { return cordovaPropertyGet(this, \"NFCState\"); },\n        set: function (value) { cordovaPropertySet(this, \"NFCState\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Diagnostic.prototype, \"motionStatus\", {\n        get: function () { return cordovaPropertyGet(this, \"motionStatus\"); },\n        set: function (value) { cordovaPropertySet(this, \"motionStatus\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Diagnostic.pluginName = \"Diagnostic\";\n    Diagnostic.plugin = \"cordova.plugins.diagnostic\";\n    Diagnostic.pluginRef = \"cordova.plugins.diagnostic\";\n    Diagnostic.repo = \"https://github.com/dpa99c/cordova-diagnostic-plugin\";\n    Diagnostic.platforms = [\"Android\", \"iOS\", \"Windows\"];\nDiagnostic.Éµfac = function Diagnostic_Factory(t) { return ÉµDiagnostic_BaseFactory(t || Diagnostic); };\nDiagnostic.Éµprov = Éµngcc0.ÉµÉµdefineInjectable({ token: Diagnostic, factory: function (t) { return Diagnostic.Éµfac(t); } });\nvar ÉµDiagnostic_BaseFactory = Éµngcc0.ÉµÉµgetInheritedFactory(Diagnostic);\n/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(Diagnostic, [{\n        type: Injectable\n    }], null, null); })();\n    return Diagnostic;\n}(IonicNativePlugin));\nexport { Diagnostic };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as Éµngcc0 from '@angular/core';\nvar LocationAccuracy = /** @class */ (function (_super) {\n    __extends(LocationAccuracy, _super);\n    function LocationAccuracy() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.REQUEST_PRIORITY_NO_POWER = 0;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.REQUEST_PRIORITY_LOW_POWER = 1;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.REQUEST_PRIORITY_BALANCED_POWER_ACCURACY = 2;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.REQUEST_PRIORITY_HIGH_ACCURACY = 3;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.SUCCESS_SETTINGS_SATISFIED = 0;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.SUCCESS_USER_AGREED = 1;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.ERROR_ALREADY_REQUESTING = -1;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.ERROR_INVALID_ACTION = 0;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.ERROR_INVALID_ACCURACY = 1;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.ERROR_EXCEPTION = 1;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.ERROR_CANNOT_CHANGE_ACCURACY = 3;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.ERROR_USER_DISAGREED = 4;\n        /**\n         * Convenience constant\n         * @type {number}\n         */\n        _this.ERROR_GOOGLE_API_CONNECTION_FAILED = 4;\n        return _this;\n    }\n    LocationAccuracy.prototype.canRequest = function () { return cordova(this, \"canRequest\", {}, arguments); };\n    LocationAccuracy.prototype.isRequesting = function () { return cordova(this, \"isRequesting\", {}, arguments); };\n    LocationAccuracy.prototype.request = function (accuracy) { return cordova(this, \"request\", { \"callbackOrder\": \"reverse\" }, arguments); };\n    LocationAccuracy.pluginName = \"LocationAccuracy\";\n    LocationAccuracy.plugin = \"cordova-plugin-request-location-accuracy\";\n    LocationAccuracy.pluginRef = \"cordova.plugins.locationAccuracy\";\n    LocationAccuracy.repo = \"https://github.com/dpa99c/cordova-plugin-request-location-accuracy\";\n    LocationAccuracy.platforms = [\"Android\", \"iOS\"];\nLocationAccuracy.Éµfac = function LocationAccuracy_Factory(t) { return ÉµLocationAccuracy_BaseFactory(t || LocationAccuracy); };\nLocationAccuracy.Éµprov = Éµngcc0.ÉµÉµdefineInjectable({ token: LocationAccuracy, factory: function (t) { return LocationAccuracy.Éµfac(t); } });\nvar ÉµLocationAccuracy_BaseFactory = Éµngcc0.ÉµÉµgetInheritedFactory(LocationAccuracy);\n/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(LocationAccuracy, [{\n        type: Injectable\n    }], null, null); })();\n    return LocationAccuracy;\n}(IonicNativePlugin));\nexport { LocationAccuracy };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvbG9jYXRpb24tYWNjdXJhY3kvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0FBQ3hFO0FBSVUsSUFnQzRCLG9DQUFpQjtBQUFDO0FBR3hEO0FBSWEsUUFOWDtBQUNGO0FBQ007QUFFQSxXQUREO0FBQ0wsUUFBRSwrQkFBeUIsR0FBRyxDQUFDLENBQUM7QUFDaEMsUUFBRTtBQUNGO0FBQ007QUFFQSxXQUREO0FBQ0wsUUFBRSxnQ0FBMEIsR0FBRyxDQUFDLENBQUM7QUFDakMsUUFBRTtBQUNGO0FBQ007QUFFQSxXQUREO0FBQ0wsUUFBRSw4Q0FBd0MsR0FBRyxDQUFDLENBQUM7QUFDL0MsUUFBRTtBQUNGO0FBQ007QUFFQSxXQUREO0FBQ0wsUUFBRSxvQ0FBOEIsR0FBRyxDQUFDLENBQUM7QUFDckMsUUFBRTtBQUNGO0FBQ007QUFFQSxXQUREO0FBQ0wsUUFBRSxnQ0FBMEIsR0FBRyxDQUFDLENBQUM7QUFDakMsUUFBRTtBQUNGO0FBQ007QUFFQSxXQUREO0FBQ0wsUUFBRSx5QkFBbUIsR0FBRyxDQUFDLENBQUM7QUFDMUIsUUFBRTtBQUNGO0FBQ007QUFFQSxXQUREO0FBQ0wsUUFBRSw4QkFBd0IsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNoQyxRQUFFO0FBQ0Y7QUFDTTtBQUVBLFdBREQ7QUFDTCxRQUFFLDBCQUFvQixHQUFHLENBQUMsQ0FBQztBQUMzQixRQUFFO0FBQ0Y7QUFDTTtBQUVBLFdBREQ7QUFDTCxRQUFFLDRCQUFzQixHQUFHLENBQUMsQ0FBQztBQUM3QixRQUFFO0FBQ0Y7QUFDTTtBQUVBLFdBREQ7QUFDTCxRQUFFLHFCQUFlLEdBQUcsQ0FBQyxDQUFDO0FBQ3RCLFFBQUU7QUFDRjtBQUNNO0FBRUEsV0FERDtBQUNMLFFBQUUsa0NBQTRCLEdBQUcsQ0FBQyxDQUFDO0FBQ25DLFFBQUU7QUFDRjtBQUNNO0FBRUEsV0FERDtBQUNMLFFBQUUsMEJBQW9CLEdBQUcsQ0FBQyxDQUFDO0FBQzNCLFFBQUU7QUFDRjtBQUNNO0FBRUEsV0FERDtBQUNMLFFBQUUsd0NBQWtDLEdBQUcsQ0FBQyxDQUFDO0FBQ3pDO0FBRWU7QUFBTSxJQUluQixxQ0FBVTtBQUthLElBSXZCLHVDQUFZO0FBS2EsSUFLekIsa0NBQU8sYUFBQyxRQUFnQjtBQUlxQjtBQUFzRDtBQUEwRTtBQUFxRTtBQUFrRztvREFoR3JWLFVBQVU7Ozs7OzBCQUNMO0FBQUMsMkJBdENQO0FBQUUsRUFzQ29DLGlCQUFpQjtBQUN0RCxTQURZLGdCQUFnQjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgTG9jYXRpb24gQWNjdXJhY3lcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBDb3Jkb3ZhL1Bob25lZ2FwIHBsdWdpbiBmb3IgQW5kcm9pZCBhbmQgaU9TIHRvIHJlcXVlc3QgZW5hYmxpbmcvY2hhbmdpbmcgb2YgTG9jYXRpb24gU2VydmljZXMgYnkgdHJpZ2dlcmluZyBhIG5hdGl2ZSBkaWFsb2cgZnJvbSB3aXRoaW4gdGhlIGFwcCwgYXZvaWRpbmcgdGhlIG5lZWQgZm9yIHRoZSB1c2VyIHRvIGxlYXZlIHlvdXIgYXBwIHRvIGNoYW5nZSBsb2NhdGlvbiBzZXR0aW5ncyBtYW51YWxseS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IExvY2F0aW9uQWNjdXJhY3kgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2xvY2F0aW9uLWFjY3VyYWN5L25neCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBsb2NhdGlvbkFjY3VyYWN5OiBMb2NhdGlvbkFjY3VyYWN5KSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmxvY2F0aW9uQWNjdXJhY3kuY2FuUmVxdWVzdCgpLnRoZW4oKGNhblJlcXVlc3Q6IGJvb2xlYW4pID0+IHtcbiAqXG4gKiAgIGlmKGNhblJlcXVlc3QpIHtcbiAqICAgICAvLyB0aGUgYWNjdXJhY3kgb3B0aW9uIHdpbGwgYmUgaWdub3JlZCBieSBpT1NcbiAqICAgICB0aGlzLmxvY2F0aW9uQWNjdXJhY3kucmVxdWVzdCh0aGlzLmxvY2F0aW9uQWNjdXJhY3kuUkVRVUVTVF9QUklPUklUWV9ISUdIX0FDQ1VSQUNZKS50aGVuKFxuICogICAgICAgKCkgPT4gY29uc29sZS5sb2coJ1JlcXVlc3Qgc3VjY2Vzc2Z1bCcpLFxuICogICAgICAgZXJyb3IgPT4gY29uc29sZS5sb2coJ0Vycm9yIHJlcXVlc3RpbmcgbG9jYXRpb24gcGVybWlzc2lvbnMnLCBlcnJvcilcbiAqICAgICApO1xuICogICB9XG4gKlxuICogfSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnTG9jYXRpb25BY2N1cmFjeScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXJlcXVlc3QtbG9jYXRpb24tYWNjdXJhY3knLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMubG9jYXRpb25BY2N1cmFjeScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZHBhOTljL2NvcmRvdmEtcGx1Z2luLXJlcXVlc3QtbG9jYXRpb24tYWNjdXJhY3knLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTG9jYXRpb25BY2N1cmFjeSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIENvbnZlbmllbmNlIGNvbnN0YW50XG4gICAqIEB0eXBlIHtudW1iZXJ9XG4gICAqL1xuICBSRVFVRVNUX1BSSU9SSVRZX05PX1BPV0VSID0gMDtcbiAgLyoqXG4gICAqIENvbnZlbmllbmNlIGNvbnN0YW50XG4gICAqIEB0eXBlIHtudW1iZXJ9XG4gICAqL1xuICBSRVFVRVNUX1BSSU9SSVRZX0xPV19QT1dFUiA9IDE7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgUkVRVUVTVF9QUklPUklUWV9CQUxBTkNFRF9QT1dFUl9BQ0NVUkFDWSA9IDI7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgUkVRVUVTVF9QUklPUklUWV9ISUdIX0FDQ1VSQUNZID0gMztcbiAgLyoqXG4gICAqIENvbnZlbmllbmNlIGNvbnN0YW50XG4gICAqIEB0eXBlIHtudW1iZXJ9XG4gICAqL1xuICBTVUNDRVNTX1NFVFRJTkdTX1NBVElTRklFRCA9IDA7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgU1VDQ0VTU19VU0VSX0FHUkVFRCA9IDE7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgRVJST1JfQUxSRUFEWV9SRVFVRVNUSU5HID0gLTE7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgRVJST1JfSU5WQUxJRF9BQ1RJT04gPSAwO1xuICAvKipcbiAgICogQ29udmVuaWVuY2UgY29uc3RhbnRcbiAgICogQHR5cGUge251bWJlcn1cbiAgICovXG4gIEVSUk9SX0lOVkFMSURfQUNDVVJBQ1kgPSAxO1xuICAvKipcbiAgICogQ29udmVuaWVuY2UgY29uc3RhbnRcbiAgICogQHR5cGUge251bWJlcn1cbiAgICovXG4gIEVSUk9SX0VYQ0VQVElPTiA9IDE7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgRVJST1JfQ0FOTk9UX0NIQU5HRV9BQ0NVUkFDWSA9IDM7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgRVJST1JfVVNFUl9ESVNBR1JFRUQgPSA0O1xuICAvKipcbiAgICogQ29udmVuaWVuY2UgY29uc3RhbnRcbiAgICogQHR5cGUge251bWJlcn1cbiAgICovXG4gIEVSUk9SX0dPT0dMRV9BUElfQ09OTkVDVElPTl9GQUlMRUQgPSA0O1xuXG4gIC8qKlxuICAgKiBJbmRpY2F0ZXMgaWYgeW91IGNhbiByZXF1ZXN0IGFjY3VyYXRlIGxvY2F0aW9uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc292bGVzIHdpdGggYSBib29sZWFuIHRoYXQgaW5kaWNhdGVzIGlmIHlvdSBjYW4gcmVxdWVzdCBhY2N1cmF0ZSBsb2NhdGlvblxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBjYW5SZXF1ZXN0KCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBJbmRpY2F0ZXMgaWYgYSByZXF1ZXN0IGlzIGN1cnJlbnRseSBpbiBwcm9ncmVzc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgYm9vbGVhbiB0aGF0IGluZGljYXRlcyBpZiBhIHJlcXVlc3QgaXMgY3VycmVudGx5IGluIHByb2dyZXNzXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGlzUmVxdWVzdGluZygpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVxdWVzdHMgYWNjdXJhdGUgbG9jYXRpb25cbiAgICogQHBhcmFtIGFjY3VyYWN5IHtudW1iZXJ9IEFjY3VyYWN5LCBmcm9tIDAgdG8gNC4gWW91IGNhbiB1c2UgdGhlIHN0YXRpYyBwcm9wZXJ0aWVzIG9mIHRoaXMgY2xhc3MgdGhhdCBzdGFydCB3aXRoIFJFUVVFU1RfUFJJT1JJVFlfXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgb24gc3VjY2VzcyBhbmQgcmVqZWN0cyBpZiBhbiBlcnJvciBvY2N1cnJlZFxuICAgKi9cbiAgQENvcmRvdmEoeyBjYWxsYmFja09yZGVyOiAncmV2ZXJzZScgfSlcbiAgcmVxdWVzdChhY2N1cmFjeTogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ=="],"sourceRoot":"webpack:///"}